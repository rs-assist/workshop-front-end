// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Server {
  id              Int          @id @default(autoincrement())
  name            String
  status          ServerStatus
  cpu             Int
  memory          Int
  location        String
  type            String       // Primary Server, Database, Firewall, etc.
  health          Int          // Health percentage
  storage         Int          // Storage usage percentage
  uptime          String       // Uptime string like "247 days"
  lastMaintenance String       // Last maintenance date
  displayId       String?      // Optional custom display ID
}

enum ServerStatus {
  online
  maintenance
  offline
  warning
}

model Agent {
  id       Int    @id @default(autoincrement())
  name     String
  location String
  mission  String
  risk     RiskLevel
  status   AgentStatus
}

enum RiskLevel {
  low1
  medium
  high
  critical
}

enum AgentStatus {
  active
  standby
  offline
}

model Operation {
  id                  Int           @id @default(autoincrement())
  name                String
  status              OperationStatus
  priority            OperationPriority
  progress            Int
  description         String
  location            String
  agents              Int
  startDate           String
  estimatedCompletion String
  objectives          String // JSON string of objectives array
  displayId           String? // Optional custom display ID
}

enum OperationStatus {
  active
  completed
  planning
  on_hold
}

enum OperationPriority {
  low
  medium
  high
  critical
}

model Intelligence {
  id             Int              @id @default(autoincrement())
  title          String
  location       String
  priority       OperationPriority
  classification Classification
  sources        Int
  source         IntelligenceSource
  date           String
  status         IntelligenceStatus
  threat         ThreatLevel
  summary        String
  tags           String           // JSON string of tags array
  displayId      String?          // Optional custom display ID
}

enum Classification {
  classified
  secret
  top_secret
}

enum IntelligenceSource {
  SIGINT
  HUMINT
  OSINT
  DIPLOMATIC
}

enum IntelligenceStatus {
  verified
  pending
  active
}

enum ThreatLevel {
  low
  medium
  high
  critical
}

model ActivityLog {
  id    Int    @id @default(autoincrement())
  time  String
  event String
  type  ActivityType
}

enum ActivityType {
  info
  warning
  error
  success
}
